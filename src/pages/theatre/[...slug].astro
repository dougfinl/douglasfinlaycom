---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';
import TheatreCreditTags from '../../components/TheatreCreditTags.astro';
import { Icon } from 'astro-icon/components';

export async function getStaticPaths() {
    const theatreCreditEntries = await getCollection('theatre');

    return theatreCreditEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const instancesByYear: Record<string, typeof entry.data.instances> = {};

entry.data.instances.forEach((instance) => {
    const year = instance.from.getUTCFullYear().toString();

    instancesByYear[year] ??= [];
    instancesByYear[year].push(instance);
});
---

<!-- TODO: noindex -->
<Layout pageTitle={entry.data.title} noPadding>
    <a href='/theatre' class='flex gap-1 items-center pb-2 hover:underline'>
        <Icon name='arrow-left' size={20} />
        <span>Back</span>
    </a>

    <article>
        {
            entry.data.photo && (
                <div>
                    <Image
                        src={entry.data.photo.image}
                        alt={entry.data.title}
                        width={900}
                        densities={[1.5, 2]}
                        class='aspect-video object-cover min-w-full'
                    />

                    {entry.data.photo.credit && (
                        <div class='text-right text-sm italic px-2'>
                            <span class='font-medium'>Photo: </span>
                            {entry.data.photo.credit}
                        </div>
                    )}
                </div>
            )
        }

        <div class='px-2'>
            <TheatreCreditTags tags={entry.data.tags} />

            <div
                class='grid grid-cols-1 sm:grid-cols-3 text-sm mb-4 divide-x divide-gray-300 dark:divide-gray-600'
            >
                <div class='sm:col-span-2'>
                    <dl>
                        <div
                            class='px-4 py-1 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0'
                        >
                            <dt class='text-sm font-medium leading-6'>
                                Company
                            </dt>
                            <dd
                                class='mt-1 text-sm leading-6 sm:col-span-2 sm:mt-0'
                            >
                                {entry.data.company}
                            </dd>
                        </div>
                        <div
                            class='px-4 py-1 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0'
                        >
                            <dt class='text-sm font-medium leading-6'>Role</dt>
                            <dd
                                class='mt-1 text-sm leading-6 sm:col-span-2 sm:mt-0'
                            >
                                {entry.data.role}
                            </dd>
                        </div>
                        {
                            entry.data.director && (
                                <div class='px-4 py-1 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0'>
                                    <dt class='text-sm font-medium leading-6'>
                                        Director
                                    </dt>
                                    <dd class='mt-1 text-sm leading-6 sm:col-span-2 sm:mt-0'>
                                        {entry.data.director}
                                    </dd>
                                </div>
                            )
                        }
                        <div
                            class='px-4 py-1 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0'
                        >
                            <dt class='text-sm font-medium leading-6'>
                                Lighting Designer
                            </dt>
                            <dd
                                class='mt-1 text-sm leading-6 sm:col-span-2 sm:mt-0'
                            >
                                {entry.data.ld}
                            </dd>
                        </div>
                    </dl>
                </div>

                <div class='text-right'>
                    {
                        Object.keys(instancesByYear)
                            .toSorted((a, b) => Number(b) - Number(a))
                            .map((year) => {
                                const formattedInstances = instancesByYear[
                                    year
                                ].map((instance) => <p>{instance.location}</p>);

                                return (
                                    <div class='py-1'>
                                        <p class='font-medium'>{year}</p>
                                        {formattedInstances}
                                    </div>
                                );
                            })
                    }
                </div>
            </div>

            <Content />
        </div>
    </article>
</Layout>
